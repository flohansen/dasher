name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run tests
    steps:
    - name: Git checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Setup protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.x'

    - name: Setup sqlc
      uses: sqlc-dev/setup-sqlc@v3
      with:
        sqlc-version: '1.26.0'

    - name: Setup tools
      run: |
        go install go.uber.org/mock/mockgen@latest
        go get github.com/golang/protobuf/protoc-gen-go
        go get google.golang.org/grpc/cmd/protoc-gen-go-grpc

    - name: Generate files
      run: make generate

    - name: Go test
      run: go test ./... -race

  docker:
    needs: test
    runs-on: ubuntu-latest
    name: Deliver to Docker Hub
    steps:
    - name: Git checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Setup protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.x'

    - name: Setup sqlc
      uses: sqlc-dev/setup-sqlc@v3
      with:
        sqlc-version: '1.26.0'

    - name: Setup tools
      run: |
        go install go.uber.org/mock/mockgen@latest
        go get github.com/golang/protobuf/protoc-gen-go
        go get google.golang.org/grpc/cmd/protoc-gen-go-grpc

    - name: Generate files
      run: make generate

    - name: Login to GHCR
      run: |
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u flohansen --password-stdin

    - name: Docker build
      run: |
        docker build -t ghcr.io/flohansen/dasher-server:latest -f build/server.dockerfile .

    - name: Docker push
      run: |
        docker push ghcr.io/flohansen/dasher-server:latest
